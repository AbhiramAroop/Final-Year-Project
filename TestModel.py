import tensorflow as tf
from tensorflow.keras import models, layers, utils
import numpy as np

my_model = tf.keras.models.load_model("./TestNetwork/Model/model2.h5")
my_model.load_weights("./TestNetwork/Weights/")

inputs = np.array([[54.0, 0.0, 88.07963179916318, 4.0, 76.51101250283111, 2.9435978999483323, 107.81957602518797, 164.0058370624472, 239.1381714715385, 1.9179911287689173, 10.5, 156.01112288135593, 0.75, 59.61266335699032, 0.5510762832767473, 14.923076923076923, 160.0, 27.0, 32.5, 70.8108108108108, 4.2, 2.379614163467666, 1.7, 81.03259439825668, 1.0, 136.5, 50.14705882352941, 71.55911764705883, 114.38235294117646, 40.370547141266655, 147.7101331793596, 7.449432591779825, 203.0, 17.428571428571427, 96.58760365657565, 119.03812218740782, 37.357142857142854, 7.6932419859595695, 1.0552813027612875, 171.05263157894737, 10.3], [76.0, 1.0, 175.3, 2.0, 80.6705882352941, 2.9435978999483323, 107.81957602518797, 164.0058370624472, 239.1381714715385, 1.9179911287689173, 18.333333333333332, 156.01112288135593, 1.0999999999999999, 58.89705882352941, 0.5599999999999999, 13.333333333333334, 125.5, 22.333333333333332, 28.65555555555555, 80.79411764705883, 3.9, 2.379614163467666, 2.3, 76.94029850746269, 1.0, 137.0, 56.714285714285715, 75.30857142857143, 112.5, 38.857142857142854, 210.14285714285714, 7.3950000000000005, 178.6, 19.631588561926726, 96.83333333333333, 113.41176470588235, 36.93913043478261, 7.6932419859595695, 1.0552813027612875, 151.5609756097561, 11.266666666666666], [44.0, 0.0, 88.07963179916318, 3.0, 56.699999999999974, 2.5, 116.0, 83.0, 199.5, 2.9, 4.666666666666667, 156.01112288135593, 0.3333333333333333, 67.125, 0.5000000000000001, 5.923076923076923, 134.33333333333334, 25.0, 28.46, 83.75925925925925, 4.26, 1.366666666666667, 1.72, 90.4375, 1.0, 138.33333333333334, 79.0, 96.7513157894737, 132.26315789473685, 35.5, 134.5, 7.494999999999999, 89.66666666666667, 19.631588561926726, 95.0, 125.6875, 37.800000000000004, 7.6932419859595695, 1.0552813027612875, 124.95121951219512, 4.7], [68.0, 1.0, 180.3, 3.0, 84.60000000000004, 4.4, 105.0, 12.0, 15.0, 0.2, 17.666666666666668, 156.01112288135593, 0.7666666666666666, 59.61266335699032, 0.5510762832767473, 14.944444444444445, 117.33333333333333, 27.666666666666668, 37.44285714285714, 70.98333333333333, 4.0, 2.379614163467666, 2.033333333333333, 81.03259439825668, 1.0, 139.33333333333334, 65.05172413793103, 83.88551724137932, 121.55172413793103, 40.370547141266655, 147.7101331793596, 7.449432591779825, 330.0, 15.457627118644067, 96.58760365657565, 119.03812218740782, 36.223076923076924, 7.6932419859595695, 1.0552813027612875, 545.8333333333334, 9.4], [88.0, 0.0, 88.07963179916318, 3.0, 76.51101250283111, 3.3, 107.81957602518797, 164.0058370624472, 239.1381714715385, 1.9179911287689173, 35.0, 156.01112288135593, 1.0, 59.61266335699032, 0.5510762832767473, 15.0, 102.5, 19.0, 29.55, 74.95833333333333, 4.32, 2.379614163467666, 1.55, 81.03259439825668, 1.0, 139.5, 45.72093023255814, 74.94651162790697, 133.3953488372093, 40.370547141266655, 147.7101331793596, 7.449432591779825, 103.0, 19.166666666666668, 96.58760365657565, 119.03812218740782, 36.88000000000001, 7.6932419859595695, 1.0552813027612875, 62.13157894736842, 4.3], [64.0, 1.0, 180.3, 1.0, 114.0, 2.9435978999483323, 101.0, 52.5, 104.5, 0.4, 16.75, 212.0, 0.9749999999999999, 73.62222222222222, 0.4666666666666668, 8.666666666666666, 204.66666666666666, 19.75, 37.225, 88.53191489361703, 4.1499999999999995, 2.379614163467666, 2.0, 88.68888888888888, 1.0, 137.75, 70.5, 81.985, 105.0, 35.142857142857146, 110.0, 7.405714285714287, 210.75, 19.631588561926726, 97.0, 115.68888888888888, 37.577777777777776, 1.3, 1.0552813027612875, 136.33333333333334, 16.099999999999998], [68.0, 0.0, 162.6, 3.0, 87.0, 2.9435978999483323, 107.81957602518797, 164.0058370624472, 239.1381714715385, 1.9179911287689173, 32.5, 156.01112288135593, 3.6, 79.0, 0.5510762832767473, 15.0, 105.0, 24.666666666666668, 31.599999999999998, 68.33898305084746, 3.775, 2.379614163467666, 1.9, 109.30188679245283, 1.0, 139.0, 72.0, 102.14714285714285, 162.42857142857142, 40.370547141266655, 147.7101331793596, 7.449432591779825, 329.6666666666667, 13.9, 96.58760365657565, 166.5, 36.63076923076923, 0.75, 1.0552813027612875, 62.970588235294116, 6.366666666666667], [78.0, 0.0, 162.6, 3.0, 48.4, 1.9, 47.0, 46.0, 82.0, 0.3, 64.6, 156.01112288135593, 0.68, 39.266666666666666, 0.5363636363636364, 11.846153846153847, 126.2, 13.6, 33.233333333333334, 70.94520547945206, 4.38, 1.6375, 2.6333333333333333, 64.76666666666667, 1.0, 139.6, 30.697674418604652, 55.177906976744175, 104.13953488372093, 30.533333333333335, 130.4, 7.274, 96.33333333333333, 19.631588561926726, 96.4, 125.55, 37.00555555555556, 3.3, 1.0552813027612875, 43.810810810810814, 20.0], [64.0, 0.0, 88.07963179916318, 3.0, 60.699999999999974, 2.9435978999483323, 107.81957602518797, 164.0058370624472, 239.1381714715385, 1.9179911287689173, 22.0, 156.01112288135593, 0.7, 59.61266335699032, 0.5510762832767473, 15.0, 112.5, 23.0, 28.3, 127.23913043478261, 4.2, 2.379614163467666, 1.65, 81.03259439825668, 1.0, 139.0, 64.47826086956522, 84.47739130434783, 124.47826086956522, 40.370547141266655, 147.7101331793596, 7.449432591779825, 696.0, 34.93478260869565, 96.58760365657565, 119.03812218740782, 36.9, 7.6932419859595695, 1.0552813027612875, 240.0, 15.2], [74.0, 1.0, 175.3, 2.0, 68.58275862068965, 2.9435978999483323, 107.81957602518797, 164.0058370624472, 239.1381714715385, 1.9179911287689173, 19.333333333333332, 156.01112288135593, 1.1333333333333335, 58.410714285714285, 0.6333333333333333, 14.083333333333334, 110.0, 24.666666666666668, 29.1, 85.1896551724138, 4.35, 2.379614163467666, 1.8, 79.51785714285714, 1.0, 140.0, 53.0, 75.67, 121.0, 44.875, 219.0, 7.35, 145.66666666666666, 19.631588561926726, 97.33333333333333, 124.89285714285714, 36.683333333333344, 7.6932419859595695, 1.0552813027612875, 108.08510638297872, 10.166666666666666]]).reshape(10,41)
outputs = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]

predictions = my_model.predict(inputs)
for i in range(len(inputs)):
    print("Given: " + str(inputs[i]) + " Prediction: " + str(predictions[i]) + " Expected: " + str(outputs[i]))
